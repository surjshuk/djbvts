// prisma/schema.prisma

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  
  // Relations
  uploadedReports Report[] @relation("UploadedReports")
  generatedPdfs   PdfGeneration[] @relation("GeneratedPdfs")
}

model Report {
  id              String   @id @default(cuid())
  snapshotCode    String   // Unique code for each upload batch
  vehicleNo       String
  area            String
  tankerType      String
  transporterName String
  reportDate      String   // Format: DD-MM-YYYY
  tripDistanceKm  String   // Stored as string "123.45 km"
  tripCount       Int
  uploadedBy      String
  uploadedAt      DateTime @default(now())

  // Relations
  uploader        User     @relation("UploadedReports", fields: [uploadedBy], references: [email])

  @@index([vehicleNo])
  @@index([area])
  @@index([snapshotCode])
  @@index([uploadedBy])
  @@index([reportDate])
  @@unique([vehicleNo, reportDate])
}

model PdfGeneration {
  id               String   @id @default(cuid())
  verificationCode String   @unique
  verificationUrl  String
  dateFrom         String
  dateTo           String
  generatedBy      String
  generatedAt      DateTime @default(now())
  
  // Filter metadata
  filterVehicle    String?  // null or "all" means no filter
  filterArea       String?
  filterMonth      String?  // Format: YYYY-MM
  
  // PDF storage (optional - can use file storage instead)
  pdfBase64        String?  // For small PDFs, or use S3/file system
  recordCount      Int      // Number of records in this report
  
  // Relations
  generator        User     @relation("GeneratedPdfs", fields: [generatedBy], references: [email])
  
  @@index([verificationCode])
  @@index([generatedBy])
  @@index([generatedAt])
}

model UploadSnapshot {
  id           String   @id @default(cuid())
  snapshotCode String   @unique
  uploadedBy   String
  uploadedAt   DateTime @default(now())
  recordCount  Int      // Total records in this upload
  fileName     String?  // Original filename
  
  @@index([snapshotCode])
  @@index([uploadedBy])
}

enum Role {
  USER
  ADMIN
}
